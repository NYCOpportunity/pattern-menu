/ Menu

/ Defaults
- this.menu = {}
- this.menu.class = 'o-menu-fixed'
- this.menu.id = this.createId()
- this.menu.ariaHidden = false
- this.menu.tabindex = '-1'
- this.menu.themes = true
- this.menu.auth = false
- this.menu.login = false
- this.menu.profile = true
- this.menu.logout = true
- this.menu.items = [{label: 'Menu', class: '', url: '#'}]

/ Inherit overrides
- if (typeof menu !== 'undefined')
  - this.menu = Object.assign(this.menu, menu);

/! { @id     Identifies the Menu for toggle targeting }
/! { @class  Add "o-menu-fixed" in production layouts }
aside#aria-c-menu class='o-menu ${this.menu.class}' aria-hidden=this.menu.ariaHidden
  div class='o-menu__wrap'
    /! { @data-js        "menu" Adds the toggling utility to close the menu }
    /! { @data-js-menu   "close" indicates that this is the primary closing button for the menu. Focus will shift from the open button to the close button when the menu is opened. }
    /! { @aria-controls  Targets the Menu ID for toggling }
    /! { @aria-expanded  Indicates the toggled state of the target }
    /! { @tabindex       Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
    button class='o-menu__nav-item' data-js='menu' data-js-menu='close' aria-controls='aria-c-menu' aria-expanded='${this.menu.ariaHidden ? 'false' : 'true' }' tabindex=this.menu.tabindex
      /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
      svg aria-hidden='true' class='icon icon-ui' tabindex=this.menu.tabindex
        use href='#lucide-x'

      span Close

    hr

    - if this.menu.auth
      /! { NYC.ID or NYC account items }
      - if this.menu.login
        /! { NYC account log in item }
        /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
        a href='#' class='o-menu__nav-item' tabindex=this.menu.tabindex
          /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
          svg aria-hidden='true' class='icon icon-ui' tabindex=this.menu.tabindex
            use href='#lucide-log-in'

          span Log In

      - if this.menu.profile
        /! { NYC account profile item }
        /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
        a href='#' class='o-menu__nav-item' tabindex=this.menu.tabindex
          /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
          svg aria-hidden='true' class='icon icon-ui' tabindex=this.menu.tabindex
            use href='#lucide-user'

          span Profile

      - if this.menu.logout
        /! { NYC account log out item }
        /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
        a href='#' class='o-menu__nav-item' tabindex=this.menu.tabindex
          /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
          svg aria-hidden='true' class='icon icon-ui' tabindex=this.menu.tabindex
            use href='#lucide-log-out'

          span Log Out

    - if this.menu.themes
      /! { @data-js   "themes" Adds the theme toggling utility to the theme button }
      /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
      button class='o-menu__nav-item' data-js='themes' tabindex=this.menu.tabindex
        /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
        svg aria-hidden='true' class='icon icon-ui' tabindex=this.menu.tabindex
          /! { @data-js-themes  "icon" lets the theme toggling utility where change the theme icon }
          use href='#lucide-sun' data-js-themes='icon'

        span class='sr-only' Toggle&nbsp;

        /! { @data-js-themes  "label" lets the theme toggling utility where to change the theme text label }
        span data-js-themes='label' Theme

    hr

    /! { @aria-label  Ensures landmarks are unique }
    nav class='o-menu__nav' aria-label='Menu'
      - for (let i in this.menu.items)
        /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
        a class='o-menu__nav-item ${this.menu.items[i].class}' tabindex=this.menu.tabindex href='${this.menu.items[i].url}'
          = this.menu.items[i].label
