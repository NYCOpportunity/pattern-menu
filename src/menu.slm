/ Mobile Menu

/ Defaults
- this.mobileMenu = {}
- this.mobileMenu.id = this.createId()
- this.mobileMenu.ariaHidden = false
- this.mobileMenu.tabindex = false

/ Inherit overrides
- if (typeof mobileMenu !== 'undefined')
  - this.mobileMenu = Object.assign(this.mobileMenu, mobileMenu);

/! { @id     Identifies the Mobile Menu for toggling }
/! { @class  Add "o-mobile-menu-fixed" in production layouts }
aside#aria-c-mobile-menu class='o-mobile-menu ${this.mobileMenu.class}' aria-hidden=this.mobileMenu.ariaHidden
  /! { @aria-label  Ensures landmarks are unique }
  nav class='o-mobile-menu__nav border-b pb-2' aria-label='mobile menu'
    /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
    a tabindex=this.mobileMenu.tabindex href='${this.baseUrl}/demos/index' Home

    a tabindex=this.mobileMenu.tabindex href='${this.baseUrl}/demos/programs/index' Programs

    a tabindex=this.mobileMenu.tabindex href='#' Opportunities

    / a tabindex=this.mobileMenu.tabindex href='#' Events

    / a tabindex=this.mobileMenu.tabindex href='#' Trainings

    a tabindex=this.mobileMenu.tabindex href='${this.baseUrl}/demos/newsletter' Newsletter

    / button tabindex=this.mobileMenu.tabindex class='btn-link w-full' data-js='search' aria-controls='aria-c-search' aria-expanded='false'
    /   span Search

  div class='pt-3'
    /! { @data-js              "mobile-menu" Adds the toggling utility to close the menu }
    /! { @data-js-mobile-menu  "close" indicates that this is the primary closing button for the menu. Focus will shift from the open button to the close button when the menu is opened. }
    /! { @aria-controls        Targets the Mobile Menu ID for toggling }
    /! { @aria-expanded        Indicates the toggled state of the target }
    /! { @tabindex             Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
    button class='btn-link' data-js='mobile-menu' data-js-mobile-menu='close' aria-controls='aria-c-mobile-menu' aria-expanded='${this.mobileMenu.ariaHidden ? 'false' : 'true' }' tabindex=this.mobileMenu.tabindex
      /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
      svg aria-hidden='true' class='icon-wnyc-ui'
        use xlink:href='#feather-x'

      span Close
      span class='sr-only' = ' and return to site'